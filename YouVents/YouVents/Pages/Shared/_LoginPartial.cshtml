@using Microsoft.AspNetCore.Identity
@using YouVents.API
@using YouVents.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<ul class="navbar-nav ml-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        /* If the user is an organizer, then include an extra link to the manage events page */
        //ApplicationUser user2 = await @UserManager.FindByNameAsync(User.Identity.Name);
        var user = await @UserManager.GetUserAsync(User);
        if (user.AccountType == "Organizer")
        {
            <li class="nav-item">
                <a id="myEvents" class="nav-link text-dark" asp-page="/Events/Manage">My Events</a>
            </li>
        }

        <li class="nav-item">
            @*<a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>*@
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@user.UserName</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
